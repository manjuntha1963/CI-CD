pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket
        }
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', credentialsId: 'github', url: 'https://github.com/manjuntha1963/ci-cd.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            environment {
                SONAR_URL = 'http://54.90.39.174:9000'
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'sonarqube', usernameVariable: 'SONAR_USERNAME', passwordVariable: 'SONAR_PASSWORD')]) {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app &&
                        mvn sonar:sonar -Dsonar.login=$SONAR_USERNAME -Dsonar.password=$SONAR_PASSWORD -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "manjuntha1963/ultimate-cicd:${BUILD_NUMBER}"
            }
            steps {
                script {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    docker.withRegistry('https://index.docker.io/v1/', credentialsId: 'docker-cred') {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                script {
                    // Improved image update logic using environment variable
                    def imageToUse = "${env.DOCKER_IMAGE}"

                    sh '''
                        sed -i "s/image: .*/image: ${imageToUse}/" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    '''

                    // Optional: Commit changes only if the image actually changed
                    // def previousImage = readFile('deployment.yml').trim()?.split('image: ')?.get(1)
                    // if (previousImage != imageToUse) {
                    //     git config user.email "manjuntha1963@gmail.com"
                    //     git config user.name "manjuntha1963"
                    //     git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    //     git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    //     git push origin HEAD:master
                    // }
                }
            }
        }
    }
}
